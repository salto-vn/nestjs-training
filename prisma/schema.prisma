// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Relation {
  single
  married
  divorce
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique()
  name           String?
  password       String
  posts          Post[]
  profile        Profile?
  phone          String?
  inRelationship Relation  @default(single)
  birthday       DateTime?
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String?
  published Boolean?  @default(false)
  like      Int?      @default(0)
  author    User?     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int?
  updatedAt DateTime? @updatedAt
  updatedBy String?
  createdAt DateTime  @default(now())
  createdBy String?
  deletedAt DateTime?
  deletedBy String?
  // CategoriesOnPosts CategoriesOnPosts[]
}

model Profile {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int       @unique // relation scalar field (used in the `@relation` attribute above)
  updatedAt DateTime? @updatedAt
  updatedBy String?
  createdAt DateTime  @default(now())
  createdBy String?
  deletedAt DateTime?
  deletedBy String?
}

// model Category {
//   id    Int                 @id @default(autoincrement())
//   name  String
//   posts CategoriesOnPosts[]
// }

// model CategoriesOnPosts {
//   post       Post     @relation(fields: [postId], references: [id])
//   postId     Int
//   category   Category @relation(fields: [categoryId], references: [id])
//   categoryId Int
//   assignedAt DateTime @default(now())
//   assignedBy String
//   @@id([ postId, categoryId])
// }
